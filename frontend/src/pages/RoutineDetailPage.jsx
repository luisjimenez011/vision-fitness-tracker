import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import apiClient from '../api/apiClient';

// Componente auxiliar para renderizar la tarjeta de un dÃ­a
const DayCard = ({ dayName, exercises }) => {
Â  
Â  // Estilos
Â  const cardStyle = {
Â  Â  backgroundColor: 'black',
Â  Â  borderRadius: '8px',
Â  Â  boxShadow: '0 4px 8px rgba(0,0,0,0.1)',
Â  Â  padding: '20px',
Â  Â  marginBottom: '20px',
Â  Â  textAlign: 'left' 
Â  };

Â  const titleStyle = {
Â  Â  borderBottom: '2px solid #000000ff',
Â  Â  paddingBottom: '10px',
Â  Â  marginBottom: '15px'
Â  };

Â  const exerciseListStyle = {
Â  Â  listStyle: 'none',
Â  Â  padding: 0
Â  };

Â  const exerciseItemStyle = {
Â  Â  marginBottom: '15px',
Â  Â  paddingBottom: '10px',
Â  Â  borderBottom: '1px dashed #e0e0e0'
Â  };

Â  return (
Â  Â  <div style={cardStyle}>
Â  Â  Â  <h3 style={titleStyle}>{dayName}</h3>
Â  Â  Â  <ul style={exerciseListStyle}>
Â  Â  Â  Â  {Array.isArray(exercises) && exercises.length > 0 ? (
Â  Â  Â  Â  Â  exercises.map((exercise, index) => (
Â  Â  Â  Â  Â  Â  <li key={index} style={exerciseItemStyle}>
Â  Â  Â  Â  Â  Â  Â  Â <strong>{exercise.name || 'Ejercicio Desconocido'}</strong> 
Â  Â  Â  Â  Â  Â  Â  Â <div>Sets: {exercise.sets || 'N/A'}</div>
Â  Â  Â  Â  Â  Â  Â  Â <div>Reps: {exercise.reps || 'N/A'}</div>
Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  ))
Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  <li>No hay ejercicios definidos para este dÃ­a.</li>
Â  Â  Â  Â  )}
Â  Â  Â  </ul>
Â  Â  </div>
Â  );
};

const RoutineDetailPage = () => {
Â  const { routineId } = useParams();
Â  const [routine, setRoutine] = useState(null);
Â  const [loading, setLoading] = useState(true);
Â  const [error, setError] = useState(null);

Â  useEffect(() => {
Â  Â  const fetchRoutineDetail = async () => {
Â  Â  Â  try {
Â  Â  Â  Â  setLoading(true);
Â  Â  Â  Â  const response = await apiClient.get(`/routine/${routineId}`);
Â  Â  Â  Â  
Â  Â  Â  Â  const routineData = response.data;
Â  Â  Â  Â  
Â  Â  Â  Â  // DeserializaciÃ³n segura
Â  Â  Â  Â  let planJson = routineData.plan_json;
Â  Â  Â  Â  if (typeof planJson === 'string') {
Â  Â  Â  Â  Â  planJson = JSON.parse(planJson);
Â  Â  Â  Â  }
Â  Â  Â  Â  routineData.plan_json = planJson;
Â  Â  Â  Â  
Â  Â  Â  Â  setRoutine(routineData);
Â  Â  Â  Â  setError(null);
Â  Â  Â  } catch (err) {
Â  Â  Â  Â  setError('Error al cargar los detalles de la rutina.');
Â  Â  Â  Â  console.error(err);
Â  Â  Â  } finally {
Â  Â  Â  Â  setLoading(false);
Â  Â  Â  }
Â  Â  };

Â  Â  fetchRoutineDetail();
Â  }, [routineId]);

Â  if (loading) {
Â  Â  return <div style={{ textAlign: 'center', marginTop: '50px' }}>Cargando...</div>;
Â  }

Â  if (error) {
Â  Â  return <div style={{ textAlign: 'center', marginTop: '50px', color: 'red' }}>{error}</div>;
Â  }

Â  if (!routine || !routine.plan_json) {
Â  Â  return <div style={{ textAlign: 'center', marginTop: '50px' }}>No se encontrÃ³ el plan de la rutina.</div>;
Â  }
Â  
Â  // ðŸ›‘ CORRECCIÃ“N CLAVE: El plan_json ya viene con el array 'workouts' si es necesario (gracias al getOne del backend)
Â  const workoutsArray = routine.plan_json.workouts || []; 
Â  
Â  if (!Array.isArray(workoutsArray) || workoutsArray.length === 0) {
Â  Â  return (
Â  Â  Â  <div style={{ textAlign: 'center', marginTop: '50px' }}>
Â  Â  Â  Â  No se encontraron sesiones de entrenamiento en esta rutina.
Â  Â  Â  </div>
Â  Â  );
Â  }

Â  // El nombre de la rutina (routine.name) ahora es el nombre combinado (ej: Plan - DÃ­a 1)
Â  return (
Â  Â  <div style={{ padding: '20px', backgroundColor: '#f9f9f9', minHeight: '100vh' }}>
Â  Â  Â  <h1 style={{ textAlign: 'center', marginBottom: '10px', color: '#333' }}>{routine.name}</h1>
Â  Â  Â  <p style={{ textAlign: 'center', marginBottom: '30px', color: '#666' }}>
Â  Â  Â  Â  {routine.plan_json.description || 'Sin descripciÃ³n.'}
Â  Â  Â  </p>
Â  Â  Â  
Â  Â  Â  <div style={{ maxWidth: '800px', margin: '0 auto' }}>
Â  Â  Â  Â  {/* Mapeamos el array de dÃ­as (workouts), que ahora solo tendrÃ¡ 1 elemento */}
Â  Â  Â  Â  {workoutsArray.map((dayDetails, index) => (
Â  Â  Â  Â  Â  <DayCard 
Â  Â  Â  Â  Â  Â  key={index} 
Â  Â  Â  Â  Â  Â  dayName={dayDetails.day} // Usamos 'day' (ej: DÃ­a 1: Torso)
Â  Â  Â  Â  Â  Â  exercises={dayDetails.exercises} // La lista de ejercicios para ese dÃ­a
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  ))}
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

export default RoutineDetailPage;